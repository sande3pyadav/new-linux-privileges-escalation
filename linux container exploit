

### Checking User and LXC Containers
#### 1. `id`
The `id` command displays the current user's UID, GID, and group memberships. This is important to check if:
- You are running as a **low-privilege user**.
- You belong to the `lxd` group, which can be exploited for privilege escalation.

Example:
```bash
id
```
Output:
```
uid=1001(user) gid=1001(user) groups=1001(user),1002(lxd)
```
If you see `lxd` in the groups, **you might be able to escalate to root using LXC**.

#### 2. `lxc list`
This command lists existing LXC containers on the system.

Example:
```bash
lxc list
```
Output:
```
+---------+---------+----------------+---------------------------+-----------+
|  NAME   |  STATE  |   IPV4         |         IPV6              |   TYPE    |
+---------+---------+----------------+---------------------------+-----------+
| ubuntu1 | RUNNING | 10.0.3.2       | fd42:4c81::1              | CONTAINER |
+---------+---------+----------------+---------------------------+-----------+
```
If containers exist and you have **lxd group membership**, you can create a privileged container, mount the hostâ€™s filesystem, and gain root access.

### Conclusion:
Checking capabilities and LXC group membership is crucial in privilege escalation. Improperly set capabilities or LXD misconfigurations can allow attackers to escalate privileges without requiring `sudo` or `setuid` binaries.

